name: CI

on:
  push:
    branches: [develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch: # Allow manual runs

jobs:
  test:
    name: Test and Lint
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ["20", "22"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: "latest"
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint with Biome
        run: pnpm lint

      - name: Type check
        run: pnpm tsc --noEmit

      - name: Build Studio
        run: pnpm build
        env:
          SANITY_STUDIO_PROJECT_ID: ${{ secrets.SANITY_STUDIO_PROJECT_ID }}
          SANITY_STUDIO_DATASET: ${{ secrets.SANITY_STUDIO_DATASET }}
          SANITY_STUDIO_API_VERSION: ${{ secrets.SANITY_STUDIO_API_VERSION }}

      - name: Check for security vulnerabilities
        run: pnpm audit --audit-level moderate

      - name: Validate conventional commits
        if: github.event_name == 'pull_request'
        run: |
          git fetch origin main:main
          pnpm commitlint --from main --to HEAD --verbose
